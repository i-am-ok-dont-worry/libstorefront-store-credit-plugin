{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/dao/index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/store-credit.actions.ts","webpack://LSFPlugin/./src/store/store-credit.default.ts","webpack://LSFPlugin/./src/store/store-credit.reducer.ts","webpack://LSFPlugin/./src/store/store-credit.thunks.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\"","webpack://LSFPlugin/external \"query-string\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { StoreCreditPlugin } from './src/index';\nexport { StoreCreditDao } from './src/dao/index';\nexport { StoreCreditService } from './src/service/index';\nexport { StoreCreditDefaultState, StoreCreditModuleState } from './src/store/store-credit.default';\nexport * from './src/types';\n","import { SearchCriteriaFilter, Task, TaskQueue, URLTransform } from '@grupakmk/libstorefront';\nimport { injectable, inject } from 'inversify';\nimport qs from 'query-string';\n\n@injectable()\nexport class StoreCreditDao {\n\n    public getStoreCredit ({ customerId, pageSize, currentPage, sortBy, sortDir }: { customerId: string } & SearchCriteriaFilter, token: string, storeCode: string): Promise<Task> {\n        const query = {\n            pageSize,\n            currentPage,\n            sortBy,\n            sortDir,\n            token\n        };\n\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/store-credit/' + customerId + '?' + qs.stringify(query)),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public getSingleStoreCredit (storeCreditId, token: string): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/store-credit/single/' + storeCreditId),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public constructor(@inject(TaskQueue) private taskQueue) {}\n}\n","import { createLibstorefrontModule, HookType, LibStorefront } from '@grupakmk/libstorefront';\nimport { LibstorefrontPlugin } from '@grupakmk/libstorefront/dist/config/types/libstorefront-plugin';\nimport { StoreCreditDao } from './dao';\nimport { StoreCreditService } from './service';\nimport { storeCreditReducer } from './store/store-credit.reducer';\nimport { StoreCreditDefaultState } from './store/store-credit.default';\n\n/**\n * Provides registered customers with a flexible credit system.\n * Lets customers spend their credit balance on product purchase.\n */\nexport const StoreCreditPlugin = ((libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<StoreCreditDao>(StoreCreditDao).to(StoreCreditDao);\n    libstorefront.getIOCContainer().bind<StoreCreditService>(StoreCreditService).to(StoreCreditService);\n    libstorefront.listenTo(HookType.AfterCoreModulesRegistered, (lsf: LibStorefront) => {\n        lsf.registerModule(createLibstorefrontModule('storeCredit', storeCreditReducer, StoreCreditDefaultState));\n    });\n}) as LibstorefrontPlugin;\n","import { injectable, inject } from 'inversify';\nimport { AbstractStore, LibstorefrontInnerState, SearchCriteriaFilter } from '@grupakmk/libstorefront';\nimport { StoreCreditThunks } from '../store/store-credit.thunks';\nimport { StoreCredit } from '../types';\n\n@injectable()\nexport class StoreCreditService {\n\n    /**\n     * Returns customer store credit\n     * Customer must be authorized to fetch credits\n     * @options {SearchCriteriaFilter} Query filter\n     * @returns {Promise<StoreCredit>}\n     */\n    public getStoreCredit ({ sortBy, sortDir, pageSize, currentPage }: SearchCriteriaFilter = {}) {\n        return this.store.dispatch(StoreCreditThunks.getStoreCredits({ sortBy, sortDir, pageSize, currentPage }));\n    }\n\n    /**\n     * Returns store credit details for user\n     * @param {string} storeCreditId\n     * @returns {StoreCredit} Store credit\n     */\n    public getSingleStoreCredit (storeCreditId: string): Promise<StoreCredit> {\n        return this.store.dispatch(StoreCreditThunks.getSingleStoreCredit(storeCreditId));\n    }\n\n    public constructor (@inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>) {}\n}\n","import { StoreCredit } from '../types';\n\nexport namespace StoreCreditActions {\n    export const SN_STORE_CREDIT = 'store-credit';\n\n    export const SET_STORE_CREDIT = SN_STORE_CREDIT + '/SET_CREDIT';\n    export const setStoreCredit = (storeCredit: StoreCredit) => ({\n        type: SET_STORE_CREDIT,\n        payload: storeCredit\n    });\n}\n","import { StoreCredit } from '../types';\n\nexport const StoreCreditDefaultState: StoreCreditModuleState = {\n    current: null\n};\n\nexport interface StoreCreditModuleState {\n    current: StoreCredit\n}\n","import { StoreCreditDefaultState, StoreCreditModuleState } from './store-credit.default';\nimport { StoreCreditActions } from './store-credit.actions';\nimport { AnyAction } from '@grupakmk/libstorefront/dist/src/state-management/types/action';\nimport {Reducer} from \"@grupakmk/libstorefront/dist/src/state-management/types/reducer\";\n\nexport const storeCreditReducer: Reducer<StoreCreditModuleState> = (state: StoreCreditModuleState, action: AnyAction) => {\n    switch (action.type) {\n        case StoreCreditActions.SET_STORE_CREDIT: {\n            return { ...state, current: action.payload };\n        }\n        default: return state || StoreCreditDefaultState;\n    }\n}\n","import {\n    AbstractStore,\n    HttpStatus,\n    IOCContainer,\n    Logger,\n    SearchCriteriaFilter,\n    StoreViewHandler\n} from '@grupakmk/libstorefront';\nimport { StoreCreditDao } from '../dao';\nimport { StoreCreditActions } from './store-credit.actions';\n\nexport namespace StoreCreditThunks {\n    export const getStoreCredits = (filter: SearchCriteriaFilter) => async (dispatch, getState) => {\n        try {\n            const customer = IOCContainer.get(AbstractStore).getState().user;\n            const token = customer.token;\n            const storeCode = StoreViewHandler.currentStoreView().general.store_code;\n\n            if (!customer || !token || !customer.current) { throw new Error('Cannot fetch store credits for unauthorized user'); }\n            const customerId = customer.current.id;\n            const response = await IOCContainer.get(StoreCreditDao).getStoreCredit({ customerId, ...filter }, token, storeCode);\n\n            if (response && response.code === HttpStatus.OK) {\n                const { items } = response.result;\n                const credit = items instanceof Array ? items[0] : items;\n                await dispatch(StoreCreditActions.setStoreCredit(credit));\n\n                return credit;\n            } else {\n                throw new Error('Not found');\n            }\n\n        } catch (e) {\n            Logger.info('Cannot fetch store credits: ', 'STORE-CREDIT-PLUGIN', e.message);\n        }\n    };\n\n    export const getSingleStoreCredit = (storeCreditId: string) => async (dispatch, getState) => {\n        try {\n            const customer = IOCContainer.get(AbstractStore).getState().user;\n            const token = customer.token;\n\n            if (!customer || !token || !customer.current) { throw new Error('Cannot fetch store credits for unauthorized user'); }\n            const response = await IOCContainer.get(StoreCreditDao).getSingleStoreCredit(storeCreditId, token);\n\n            if (response && response.code === HttpStatus.OK) {\n                const credit = response.result;\n                await dispatch(StoreCreditActions.setStoreCredit(credit));\n\n                return credit;\n            } else {\n                throw new Error('Not found');\n            }\n\n        } catch (e) {\n            Logger.info('Cannot fetch store credits: ', 'STORE-CREDIT-PLUGIN', e.message);\n        }\n    }\n}\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");","module.exports = require(\"query-string\");"],"sourceRoot":""}